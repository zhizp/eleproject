package com.newhero.urbanconstruction.util;

import java.io.File;
import java.io.FileInputStream;

import javax.print.Doc;
import javax.print.DocFlavor;
import javax.print.DocPrintJob;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.print.ServiceUI;
import javax.print.SimpleDoc;
import javax.print.attribute.DocAttributeSet;
import javax.print.attribute.HashDocAttributeSet;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.print.attribute.standard.MediaPrintableArea;
import javax.swing.JFileChooser;

import com.jacob.activeX.ActiveXComponent;
import com.jacob.com.ComThread;
import com.jacob.com.Dispatch;
import com.jacob.com.Variant;

public class PrintTest {

	public static void main(String[] args) { 
		/*System.out.println("开始打印");
		System.out.println("开始打印word");
		String filepath="D:/a.docx";
        //初始化COM线程
		//初始化COM线程
        ComThread.InitSTA();
         
        //使用Jacob创建 ActiveX部件对象：
        ActiveXComponent word=new ActiveXComponent("Word.Application");
         
        //打开Word文档
        Dispatch doc=null;
        Dispatch.put(word, "Visible", new Variant(false));// 这里Visible是控制文档打开后是可见还是不可见，若是静默打印，那么第三个参数就设为false
//        word.setProperty("ActivePrinter", new Variant("pdfFactory Pro")); //设置打印机,第二个参数即为打印机的name
        Dispatch docs=word.getProperty("Documents").toDispatch();
        doc=Dispatch.call(docs, "Open", filepath).toDispatch();
        try {
            Dispatch.call(doc, "PrintOut");//打印
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("word打印失败");
        }finally{
            try {
                if(doc!=null){
                    //关闭文档
                    Dispatch.call(doc, "Close",new Variant(0));
                }
            } catch (Exception e2) {
                e2.printStackTrace();
            }
            word.invoke("Quit", new Variant[] {});//关闭进程
            //释放资源
            ComThread.Release();
             
        }
		*/
		String path="D:/a.xls";
		//初始化COM线程
		ComThread.InitSTA();
		//新建Excel对象
		ActiveXComponent xl=new ActiveXComponent("Excel.Application");
		try { 
			System.out.println("Version=" + xl.getProperty("Version"));
			//设置是否显示打开Excel  
			Dispatch.put(xl, "Visible", new Variant(true));
			//打开具体的工作簿
			Dispatch workbooks = xl.getProperty("Workbooks").toDispatch(); 
			Dispatch excel=Dispatch.call(workbooks,"Open",path).toDispatch(); 
			
			//设置打印属性并打印
			Dispatch.callN(excel,"PrintOut",new Object[]{Variant.VT_MISSING, Variant.VT_MISSING, new Integer(1),
					new Boolean(false),/*PRINT_NAME*/Variant.VT_MISSING, new Boolean(true),Variant.VT_MISSING, ""});
			
			//关闭文档
			//Dispatch.call(excel, "Close", new Variant(false));  
		} catch (Exception e) { 
			e.printStackTrace(); 
		} finally{
			//xl.invoke("Quit",new Variant[0]);
			//始终释放资源 
			ComThread.Release(); 
		}
	 } 	
		
        
}
