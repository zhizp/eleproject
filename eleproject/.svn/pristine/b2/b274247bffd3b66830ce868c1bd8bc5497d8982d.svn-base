package com.newhero.urbanconstruction.codetablemaintain.unitinfo.controller;

import java.net.URLEncoder;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.newhero.urbanconstruction.codetablemaintain.projectyear.pojo.ProjectYearDTO;
import com.newhero.urbanconstruction.codetablemaintain.unitinfo.pojo.UnitInfoDTO;
import com.newhero.urbanconstruction.codetablemaintain.unitinfo.service.UnitInfoService;
import com.newhero.urbanconstruction.sysmanager.user.pojo.UserDTO;
import com.newhero.urbanconstruction.util.BaseQueryVo;
import com.newhero.urbanconstruction.util.Constant;
import com.newhero.urbanconstruction.util.Pagination;
import com.newhero.urbanconstruction.util.ToolsUtil;

/**
 * 单位信息
 * @author mqr
 *
 */
@Controller
@RequestMapping("/unitinfo")
public class UnitInfoController {
	@Resource
	private UnitInfoService unitInfoService;
	
	@RequestMapping(value = "/unitInfoList")
    public String unitInfoList(String pn,String rowsPerPage,String keyword, HttpServletResponse response,HttpServletRequest request, Model model){
		if(ToolsUtil.isEmpty(pn)){
			pn = Constant.DEAULT_START_PAGE_NUM ;
		}
		if(ToolsUtil.isEmpty(rowsPerPage)){
			rowsPerPage = Constant.DEFAULT_PAGE_SIZE;
		}
		
		// 分页信息
		Pagination page = new Pagination();
		//翻页、参数
		BaseQueryVo dto = new BaseQueryVo();
		
		dto.setKeyword(keyword);
		dto.setStartRow((Integer.parseInt(pn) - 1) * Integer.parseInt(rowsPerPage));
		dto.setPageSize(Integer.parseInt(rowsPerPage));
		
		int rowsCount = unitInfoService.getUnitInfoCountByKeyword(dto) ;
		
		page.setRowsCount(rowsCount);
		page.setRowsPerPage(Integer.parseInt(rowsPerPage));
		page.setCurrentPage(Integer.parseInt(pn));
		page.setUrl(request.getContextPath()+"/unitinfo/unitInfoList.do?rowsPerPage="+rowsPerPage);
		
		List<UnitInfoDTO> unitInfoList = unitInfoService.getUnitInfoListByKeyword(dto);
		if(unitInfoList.isEmpty()&&Integer.parseInt(pn)>1) {
			dto.setStartRow((Integer.parseInt(pn) - 2) * Integer.parseInt(rowsPerPage));
			unitInfoList = unitInfoService.getUnitInfoListByKeyword(dto);
			page.setCurrentPage(Integer.parseInt(pn)-1);
		}
		
		
		model.addAttribute("unitInfoList", unitInfoList);
		
		model.addAttribute("keyword",keyword);
		model.addAttribute("page",page);
		return "unitinfo/UnitInfoList";
	}
	/**
	 * ajax根据用户ID查询用户信息
	 * @param id
	 * @param model
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value="/getUnitInfoById", method = RequestMethod.POST)
	public UnitInfoDTO getUnitInfoById(@RequestParam(value = "id") String id){
		if(ToolsUtil.isEmpty(id)) return null;
		return unitInfoService.getUnitInfoById(Integer.valueOf(id));
	}
	
	/**
	 * ajax添加或修改数据
	 * @param user
	 * @param response
	 */
	@ResponseBody
	@RequestMapping(value="/saveUnitInfo", method = RequestMethod.POST)
	public Map<String, String> saveUnitInfo(@ModelAttribute("invest")UnitInfoDTO unitinfo,HttpServletResponse response,HttpServletRequest request){
//		System.out.println("进来了"+user.getName());
		UserDTO sessUser = (UserDTO)request.getSession().getAttribute("USER_SESSION");
		
		unitinfo.setOperatorid(sessUser.getId());
		int rs;
		if(unitinfo.getId()!=null && unitinfo.getId()>0){
			
			rs = unitInfoService.updateUnitInfoById(unitinfo);
		}else{
//			String pwd = user.getPassword();
//			invest.setPassword(MD5.getMD5(pwd.getBytes()));
			rs = unitInfoService.insertUnitInfo(unitinfo);
		}

		Map<String, String> result = new HashMap<String, String>();
		result.put("result", rs+"");
		return result;
	}
	
	/**
	 * ajax根据ID置为删除状态
	 * @param id
	 * @param model
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value="/delUnitInfos", method = RequestMethod.POST)
	public String delUnitInfos(@RequestParam(value = "id") String id,HttpServletResponse response,HttpServletRequest request) {
		UserDTO sessUser = (UserDTO)request.getSession().getAttribute("USER_SESSION");
		int rs = 0;
		if(ToolsUtil.isNotEmpty(id)){
			String[] ids = id.split(",");
			rs = unitInfoService.delUnitInfobyIds(ids, sessUser.getId());
		}
		return Integer.toString(rs);
	}
	
	@RequestMapping(value = "/excepData")
    public void excepData(HttpServletResponse response,HttpServletRequest request) throws Exception {
		List<UnitInfoDTO> unitInfoList = unitInfoService.getUnitInfoList();
		//设置输出头
    	response.setContentType("application/vnd.ms-excel;charset=UTF-8");
    	String filename = "单位信息表.xls";// 设置下载时客户端Excel的名称
    	//设置HTTP响应的头
    	String t = request.getHeader("User-Agent");
		if (t.indexOf("Firefox") > 0) {
			response.setHeader("Content-disposition", "attachment;filename="
					+ new String(filename.getBytes("gb2312"), "ISO8859-1"));
		} else {
			response.setHeader("Content-disposition", "attachment;filename="
					+ URLEncoder.encode(filename, "UTF-8"));
		}
    	ServletOutputStream stream = response.getOutputStream();
    	//创建工作薄
    	HSSFWorkbook workbook = new HSSFWorkbook();
    	//创建工作标签页(sheet)
    	HSSFSheet sheet = workbook.createSheet("单位信息表");

    	//创建表头
    	HSSFRow row = sheet.createRow(0);

    	HSSFCell cell = row.createCell(0);
    	cell.setCellValue("编号");

    	HSSFCell cell2 = row.createCell(1);
    	cell2.setCellValue("单位编码");


    	HSSFCell cell3 = row.createCell(2);
    	cell3.setCellValue("单位名称");


    	HSSFCell cell4 = row.createCell(3);
    	cell4.setCellValue("单位简介");

    	HSSFCell cell5 = row.createCell(4);
    	cell5.setCellValue("备注");

    	//创建数据行
    	for(int i = 0;i<unitInfoList.size();i++) {
    	UnitInfoDTO unitInfoDTO= unitInfoList.get(i);
    	HSSFRow newrow = sheet.createRow(i+1);
    	newrow.createCell(0).setCellValue(i+1);
    	newrow.createCell(1).setCellValue(unitInfoDTO.getId());
    	newrow.createCell(2).setCellValue(unitInfoDTO.getUnitcode());
    	newrow.createCell(3).setCellValue(unitInfoDTO.getUnitname());
    	newrow.createCell(4).setCellValue(unitInfoDTO.getUnitshortname());
    	newrow.createCell(5).setCellValue(unitInfoDTO.getRemark());
    	}

    	workbook.write(stream);

    	stream.close();

    	
    	}
	
}
